.. _example_preemption_norestart:

==========================
Preemption with no restart
==========================

The scenario of the simulation is the following:

.. code-block:: none

   |Generator #0| \
                   )-> |Resource #0|
   |Generator #1| /

Where messages generated by ``Generator #0`` preempt the messages generated by ``Generator #1`` while being served by ``Resource #0``.
In this example, ``Resource #0`` has memory. Therefore, messages being preempted only spend the residual service time the next time are served.

.. code-block:: python

    import simpype
    import random

    # [Mandatory] Create a SimPype simulation object
    sim = simpype.Simulation(id = 'preemption')
    # [Optional] Fix the seed used by the pseudo-random generator
    sim.seed = 42
    # [Optional] Configure the path containting the models for the simulation. 
    # [Default] Current working directory
    sim.model.dir = 'examples/model'

    # Create a generator
    gen0 = sim.add_generator(id = 'gen0')
    # Assign an arrival time
    gen0.random['arrival'] = {0: lambda: random.expovariate(1.0/60)}
    gen0.message.property['priority'] = 0
    # Create a generator
    gen1 = sim.add_generator(id = 'gen1')
    # Assign an arrival time
    gen1.random['arrival'] = {0: lambda: random.expovariate(1.0/60)}
    gen1.message.property['priority'] = 1

    # Add a resource
    res0 = sim.add_resource(id = 'res0', model = 'r_preemption', pipe = 'p_preemption')
    res0.random['service'] = {0: lambda: random.expovariate(1.0/90)}

    # Add a pipiline connecting the generator to the resource
    p0 = sim.add_pipeline(gen0, res0)
    p1 = sim.add_pipeline(gen1, res0)

    # Run until t=300
    sim.run(until = 300)

Where ``r_preemption`` model is so implemented:

.. code-block:: python

    import simpype

    class Resource(simpype.Resource):
        def __init__(self, sim, id, capacity = 1, pipe = None):
            super().__init__(sim, id, capacity, pipe)

        @simpype.resource.service   
        def service(self, message):
            if 'wait' not in message.property:
                message.property['wait'] = self.random['service'].value
            yield self.env.timeout(message.property['wait'].value)

    # Do NOT remove
    resource = lambda *args: Resource(*args)

And ``p_preemption`` model is so implemented:

.. code-block:: python

    import simpype

    class PriorityPreemption(simpype.Pipe):
        def __init__(self, sim, resource, id):
            super().__init__(sim, resource, id)     
            self.add_queue(id = 'preempted')
            self.add_queue(id = 'express')
            self.add_queue(id = 'fast')
            self.add_queue(id = 'slow')

        @simpype.pipe.dequeue
        def dequeue(self):
            if len(self.queue['express']) > 0:
                return self.queue['express'].pop()
            elif len(self.queue['preempted']) > 0:
                return self.queue['preempted'].pop()
            elif len(self.queue['fast']) > 0:
                return self.queue['fast'].pop()
            else:
                return self.queue['slow'].pop()

        @simpype.pipe.enqueue
        def enqueue(self, message):
            if 'priority' not in message.property:
                message.property['priority'] = 2

            if message.property['priority'].value == 0:
                m = self.queue['express'].push(message)
            elif message.property['priority'].value == 1:
                m = self.queue['fast'].push(message)
            elif message.property['priority'].value == 2:
                m = self.queue['slow'].push(message)
            else:
                m = self.queue['slow'].push(message)

            if isinstance(m, simpype.message.Message) and len(self.queue['express']) > 0:
                # Select the candidates to preempt
                tlist = [t for t in self.resource.task.values() if t.process.is_alive and \
                    t.message.property['priority'].value != 0]
                if len(tlist) > 0:
                    task = max(tlist, key = lambda task: task.message.property['priority'].value)
                    task.interrupt(cause = 'preempted')
                    if 'wait' in task.message.property:
                        task.message.property['wait'] = \
                            task.message.property['wait'].value - (task.interrupted - task.started)
                    self.queue['preempted'].push(task.message)
            return m

    # Do NOT remove
    pipe = lambda *args: PriorityPreemption(*args)

``sim.cfg`` stored under the ``log`` folder contains:

.. code-block:: none
  
    Simulation Seed: 42
    Simulation Time: 300.000000000
    Execution Time: 0.005125920

``sim.log`` stored under the ``log`` folder contains:

.. code-block:: none

    timestamp,message,seq_num,resource,event
    0.000000000,gen0,0,res0,pipe.in
    0.000000000,gen1,0,res0,pipe.in
    0.000000000,gen0,0,res0,pipe.out
    1.519730343,gen1,1,res0,pipe.in
    16.674901483,gen1,2,res0,pipe.in
    28.946165767,gen0,0,res0,resource.serve
    28.946165767,gen1,0,res0,pipe.out
    61.203617236,gen0,1,res0,pipe.in
    61.203617236,gen1,0,res0,pipe.in
    61.203617236,gen1,0,res0,resource.preempted
    61.203617236,gen0,1,res0,pipe.out
    69.389333651,gen0,1,res0,resource.serve
    69.389333651,gen1,0,res0,pipe.out
    96.690461851,gen1,3,res0,pipe.in
    129.573231415,gen1,4,res0,pipe.in
    131.388242047,gen1,5,res0,pipe.in
    138.757452973,gen1,0,res0,resource.serve
    138.757452973,gen1,1,res0,pipe.out
    146.191243805,gen1,6,res0,pipe.in
    147.804908026,gen1,7,res0,pipe.in
    161.106408176,gen1,8,res0,pipe.in
    194.840903210,gen0,2,res0,pipe.in
    194.840903210,gen1,1,res0,pipe.in
    194.840903210,gen1,1,res0,resource.preempted
    194.840903210,gen0,2,res0,pipe.out
    217.253280917,gen0,2,res0,resource.serve
    217.253280917,gen1,1,res0,pipe.out
    224.075928249,gen1,9,res0,pipe.in
    224.522228188,gen1,1,res0,resource.serve
    224.522228188,gen1,2,res0,pipe.out
    242.080658464,gen0,3,res0,pipe.in
    242.080658464,gen1,2,res0,pipe.in
    242.080658464,gen1,2,res0,resource.preempted
    242.080658464,gen0,3,res0,pipe.out
    242.471856577,gen0,4,res0,pipe.in
    277.464450627,gen1,10,res0,pipe.in
